version: "3.8"

services:

  ##################
  # API
  ##################

  postgrest1:
    image: postgrest/postgrest:v12.0.2
    ports:
      - "3005:3000"
    environment:
      PGRST_DB_URI: postgres://admin:admin@postgres1:5432/api
      PGRST_DB_SCHEMAS: public
      PGRST_LOG_LEVEL: info
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:8080/data
      PGRST_OPENAPI_MODE: ignore-privileges # To allow get all the endpoints via Swagger
    depends_on:
      - postgres1

  postgrest2:
    image: postgrest/postgrest:v12.0.2
    ports:
      - "3006:3000"
    environment:
      PGRST_DB_URI: postgres://admin:admin@postgres2:5432/api
      PGRST_DB_SCHEMAS: public
      PGRST_LOG_LEVEL: info
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:8080/data
      PGRST_OPENAPI_MODE: ignore-privileges # To allow get all the endpoints via Swagger
    depends_on:
      - postgres2

  ##################
  # DATA STORAGE
  ##################

  # PostgreSQL database 1
  postgres1:
    image: postgres:16.1-alpine3.19
    ports:
      # Expose PostgreSQL port to the host machine
      # but not on the standard port to prevent conflicts.
      - "5435:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./postgres1/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  # PostgreSQL database 2
  postgres2:
    image: postgres:16.1-alpine3.19
    ports:
      # Expose PostgreSQL port to the host machine
      # but not on the standard port to prevent conflicts.
      - "5436:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./postgres2/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
